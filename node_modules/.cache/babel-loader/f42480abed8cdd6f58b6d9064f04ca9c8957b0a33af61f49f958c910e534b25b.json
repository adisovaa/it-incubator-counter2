{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/new start/counter2/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentValue, setCurrentValue] = useState(null);\n  const [maxValue, setMaxValue] = useState(5);\n  const [startValue, setStartValue] = useState(0);\n  const [isSettingMenu, setIsSettingMenu] = useState(true);\n  const [error, setError] = useState(false);\n  const handleStartValueChange = e => {\n    const value = parseInt(e.currentTarget.value);\n    setStartValue(value);\n    setError(value <= 0 || value <= maxValue);\n  };\n  const handleMaxValueChange = e => {\n    const value = parseInt(e.currentTarget.value, 10);\n    setMaxValue(value);\n    setError(value < startValue || startValue < 0);\n  };\n  const handleSet = () => {\n    setCurrentValue(startValue);\n    setIsSettingMenu(true);\n  };\n  const incHandler = () => {\n    if (currentValue !== null && currentValue < maxValue) {\n      setCurrentValue(currentValue + 1);\n    }\n  };\n  const handleReset = () => {\n    setStartValue(0);\n    setMaxValue(5);\n    setCurrentValue(null);\n    setError(false);\n  };\n  const setHandler = () => {\n    setIsSettingMenu(false);\n    if (!error) {\n      setCurrentValue(startValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: isSettingMenu ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blockDisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"values\",\n          children: currentValue !== null ? /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: currentValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"'Press 'Set' to configure values'\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: incHandler,\n            children: \"inc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReset,\n            children: \"reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setHandler,\n            children: \"set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxValue\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Max Value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: maxValue,\n              onChange: handleMaxValueChange,\n              className: error ? \"error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: startValue,\n              onChange: handleStartValueChange,\n              className: error ? \"error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSet,\n            children: \"Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"pUk/w8wq+rNoFVsF48CmBL69DRI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","currentValue","setCurrentValue","maxValue","setMaxValue","startValue","setStartValue","isSettingMenu","setIsSettingMenu","error","setError","handleStartValueChange","e","value","parseInt","currentTarget","handleMaxValueChange","handleSet","incHandler","handleReset","setHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/new start/counter2/my-app/src/App.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport './App.css';\n\nfunction App() {\n    const [currentValue, setCurrentValue] = useState<number | null>(null);\n    const [maxValue, setMaxValue] = useState<number>(5)\n    const [startValue, setStartValue] = useState<number>(0)\n    const [isSettingMenu, setIsSettingMenu] = useState<boolean>(true)\n    const [error, setError] = useState<WithImplicitCoercion<any>>(false)\n\n\n    const handleStartValueChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const value = parseInt(e.currentTarget.value)\n        setStartValue(value)\n        setError(value <= 0 || value <= maxValue)\n    }\n    const handleMaxValueChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const value = parseInt(e.currentTarget.value, 10)\n        setMaxValue(value)\n        setError(value < startValue || startValue < 0)\n    }\n    const handleSet = () => {\n        setCurrentValue(startValue)\n        setIsSettingMenu(true)\n    }\n    const incHandler = () => {\n        if (currentValue !== null && currentValue < maxValue) {\n            setCurrentValue(currentValue + 1);\n        }\n    }\n    const handleReset = () => {\n        setStartValue(0);\n        setMaxValue(5);\n        setCurrentValue(null);\n        setError(false);\n    }\n    const setHandler = () => {\n        setIsSettingMenu(false)\n        if (!error) {\n            setCurrentValue(startValue);\n        }\n    }\n\n\n    return (\n        <div className=\"App\">\n\n            <div className='container'>\n                {\n                    isSettingMenu\n                        ? <div className='blockDisplay'>\n                            <div className='values'>\n                                {\n                                    currentValue !== null\n                                        ? <h4>{currentValue}</h4>\n                                        : <h4>'Press 'Set' to configure values'</h4>\n                                }\n                            </div>\n\n                            <div className='buttons'>\n                                <button onClick={incHandler}>inc</button>\n                                <button onClick={handleReset}>reset</button>\n                                <button onClick={setHandler}>set</button>\n                            </div>\n                        </div>\n\n\n                        : <div className='boxValue'>\n                            <div className=\"inputs\">\n                                <div className='input'>\n                                    <label>Max Value:</label>\n                                    <input\n                                        type=\"number\"\n                                        value={maxValue}\n                                        onChange={handleMaxValueChange}\n                                        className={error ? \"error\" : \"\"}\n                                    />\n                                </div>\n                                <div className='input'>\n                                    <label>Start Value:</label>\n                                    <input\n                                        type=\"number\"\n                                        value={startValue}\n                                        onChange={handleStartValueChange}\n                                        className={error ? \"error\" : \"\"}\n                                    />\n                                </div>\n                            </div>\n                            <div className='buttons'>\n                                <button onClick={handleSet}>Set</button>\n                            </div>\n                        </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}